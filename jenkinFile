pipeline {
    agent any

    environment {
        NODE_VERSION = '18.17.1'
        ALLURE_COMMANDLINE = 'C:\\Users\\Administrator\\scoop\\apps\\allure\\current\\bin\\allure.bat' // Full path to the allure.bat file
    }

    tools {
        nodejs 'NodeJS' // Ensure you have a Node.js tool configured in Jenkins
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'master', url: 'https://github.com/Ayzal01/eshopping_automation.git'
            }
        }

        stage('Setup Node.js & Install Dependencies') {
            steps {
                bat 'node -v || echo "Node.js not found, please install manually"'
                bat 'npm ci' // Use npm ci for cleaner installs
                bat 'npx playwright install --with-deps'
            }
        }

        stage('Run Playwright Tests') {
            steps {
                bat 'npx playwright test --project=chromium --workers=1 --reporter=allure-playwright'
            }
        }

        stage('Verify Allure Results') {
            steps {
                bat 'if exist allure-results (echo "Allure results found" && dir allure-results) else (echo "No Allure results found!")'
            }
        }

        stage('Generate Allure Report') {
            steps {
                bat 'npx allure generate allure-results --clean -o allure-report'
            }
        }

        stage('Archive Allure Results') {
            steps {
                archiveArtifacts artifacts: 'allure-results/**', fingerprint: true
            }
        }

        stage('Publish Allure Report') {
            steps {
                script {
                    def allureAvailable = fileExists('allure-results')
                    if (allureAvailable) {
                        allure([ 
                            results: [[path: 'allure-results']], 
                            reportBuildPolicy: 'ALWAYS' 
                        ])
                    } else {
                        echo "Skipping Allure report publishing, results not found."
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline execution completed."
        }
        failure {
            echo "Pipeline failed. Please check the logs for details."
        }
    }
}
